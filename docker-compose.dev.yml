version: '3.8'

services:
  # Development Main Platform
  main-platform:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: ["pnpm", "dev"]
    restart: unless-stopped

  # Development Services
  ecommerce-dev:
    build:
      context: ./Services/E-com
      dockerfile: ../../Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./Services/E-com:/app
      - /app/node_modules
    command: ["pnpm", "dev"]
    restart: unless-stopped

  elearning-dev:
    build:
      context: ./Services/E-Learning
      dockerfile: ../../Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./Services/E-Learning:/app
      - /app/node_modules
    command: ["pnpm", "dev"]
    restart: unless-stopped

  fooddelivery-dev:
    build:
      context: ./Services/Food-Delivery
      dockerfile: ../../Dockerfile
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./Services/Food-Delivery:/app
      - /app/node_modules
    command: ["pnpm", "dev"]
    restart: unless-stopped

  healthcare-dev:
    build:
      context: ./Services/Healthcare
      dockerfile: ../../Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./Services/Healthcare:/app
      - /app/node_modules
    command: ["pnpm", "dev"]
    restart: unless-stopped

  travel-dev:
    build:
      context: ./Services/Travel_&_Tourism
      dockerfile: ../../Dockerfile
    ports:
      - "3005:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./Services/Travel_&_Tourism:/app
      - /app/node_modules
    command: ["pnpm", "dev"]
    restart: unless-stopped

  wholesale-dev:
    build:
      context: ./Services/Wholesale
      dockerfile: ../../Dockerfile
    ports:
      - "3006:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./Services/Wholesale:/app
      - /app/node_modules
    command: ["pnpm", "dev"]
    restart: unless-stopped

  # Development database
  dev-postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: linka_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    volumes:
      - dev-postgres-data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - default

  # Development Redis
  dev-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - default

  # Development monitoring
  dev-prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  dev-postgres-data:
